<!DOCTYPE html><html><head>
<!-------------HTML Prologue------------!>
<!---Published By: Akshay , 708 S Beech Street , Syracuse .--!>
<!----------------------(315)-289-0056----------------------!>
<!----Package Name:C:\Users\Ringo\Documents\Visual Studio 2017\Projects\Oodp4\Oodp4\ServerRepository\CategoryTwo\\Parent.h-----!>
<!-------Published on :07:06:2018 15:15:36-----!>
<link rel=stylesheet type=text/css href="../Common/Stylesheet.css"/></head> <div class = indent><h4>Dependencies:</h4><a href = "Child.h.htm">Child.h</a><br><a href = "Child2.h.htm">Child2.h</a><br> </div></hr><pre>#ifndef SCOPESTACK_H
#define SCOPESTACK_H
#pragma once


#include "Child2.h"
#include "Child.h"
#include "Invalid.h"
#include &lt;list&gt;


namespace parent1
<details><summary>{</summary>
	namespace parent2
<details><summary>	{</summary>
		template&lt;typename T&gt;
<details><summary>		class Parent {</summary>
			using namespace ChildTest;
		public:
			void push(const T& item);
			T pop();
		private:
			data d;
			std::list&lt;T&gt; stack;
			Child child;
</details>		};


		template&lt;class T&gt;
		void Parent&lt;T&gt;::push(const T& item)
<details><summary>		{</summary>
			stack.push_back(item);
</details>		}

		template&lt;class T&gt;
		T Parent&lt;T&gt;::pop()
<details><summary>		{</summary>
			T item = stack.back();
			stack.pop_back();
			globalData++;
			return item;
</details>		}
</details>	}

</details>}
#endif
</pre></body></html>